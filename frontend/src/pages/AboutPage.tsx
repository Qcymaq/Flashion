import React, { useState } from 'react';
import {
  Box,
  Container,
  Typography,
  Grid,
  TextField,
  Button,
  styled,
  Paper,
  Snackbar,
  Alert,
} from '@mui/material';
import { motion } from 'framer-motion';
import { submitConsultation, ConsultationForm } from '../services/consultation';

const HeroSection = styled(Box)({
  background: '#FFF5F5',
  padding: '60px 0',
  position: 'relative',
  overflow: 'hidden',
});

const FloatingMakeup = styled('img')({
  position: 'absolute',
  right: '5%',
  top: '50%',
  transform: 'translateY(-50%)',
  maxWidth: '500px',
  width: '45%',
  height: 'auto',
  objectFit: 'contain',
});

const FeatureCard = styled(Paper)({
  padding: '32px',
  height: '100%',
  borderRadius: '16px',
  boxShadow: '0 4px 12px rgba(0,0,0,0.1)',
  display: 'flex',
  flexDirection: 'column',
  alignItems: 'center',
  textAlign: 'center',
  transition: 'transform 0.3s ease-in-out',
  '&:hover': {
    transform: 'translateY(-5px)',
  },
});

const FeatureImage = styled('img')({
  width: '100%',
  height: '200px',
  objectFit: 'cover',
  borderRadius: '8px',
  marginBottom: '24px',
});

const AboutPage = () => {
  const [formData, setFormData] = useState<ConsultationForm>({
    name: '',
    email: '',
    phone: '',
    service: '',
    message: ''
  });

  const [snackbar, setSnackbar] = useState({
    open: false,
    message: '',
    severity: 'success' as 'success' | 'error'
  });

  const handleCloseSnackbar = () => {
    setSnackbar(prev => ({ ...prev, open: false }));
  };

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      await submitConsultation(formData);
      setSnackbar({
        open: true,
        message: 'G·ª≠i y√™u c·∫ßu t∆∞ v·∫•n th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n s·ªõm.',
        severity: 'success'
      });
      setFormData({
        name: '',
        email: '',
        phone: '',
        service: '',
        message: ''
      });
    } catch (error: any) {
      setSnackbar({
        open: true,
        message: error.message || 'C√≥ l·ªói x·∫£y ra. Vui l√≤ng th·ª≠ l·∫°i sau.',
        severity: 'error'
      });
    }
  };

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ duration: 0.5 }}
    >
      {/* Hero Section */}
      <HeroSection>
        <Container maxWidth="lg">
          <Grid container spacing={4}>
            <Grid item xs={12} md={6}>
              <Typography variant="h3" gutterBottom sx={{ fontWeight: 600 }}>
                V·ªÄ FLASHION
              </Typography>
              <Typography variant="h5" gutterBottom sx={{ color: '#E57373'}}>
                "H√£y Th·ª≠ ‚Äì Tr·∫£i Nghi·ªám ‚Äì T·ªèa S√°ng"
              </Typography>
              <Typography variant="body1" sx={{ mt: 3, color: '#666', fontSize: '1.1rem', lineHeight: 1.6 }}>
                Ch√∫ng t√¥i l√† n·ªÅn t·∫£ng l√†m ƒë·∫πp ƒë·∫ßu ti√™n t·∫°i Vi·ªát Nam √°p d·ª•ng AI. V·ªõi nh·ªØng c√¥ng ngh·ªá ti√™n ti·∫øn nh·∫•t, ch√∫ng t√¥i ƒë√£ ph√°t tri·ªÉn m·ªôt c√¥ng c·ª• th√¥ng minh gi√∫p b·∫°n th·ª≠ m·ªπ ph·∫©m ·∫£o v√† th·ªÉ hi·ªán c√° t√≠nh, ƒë·ªìng th·ªùi t·∫°o n√™n c√°c th∆∞∆°ng hi·ªáu m·ªπ ph·∫©m uy t√≠n ƒë·∫øn g·∫ßn h∆°n v·ªõi ng∆∞·ªùi d√πng.
              </Typography>
            </Grid>
          </Grid>
        </Container>
        <FloatingMakeup src="/images/Abmakeup.png" alt="S·∫£n ph·∫©m trang ƒëi·ªÉm" />
      </HeroSection>

      {/* Features Section */}
      <Container maxWidth="lg" sx={{ py: 8 }}>
        <Grid container spacing={4} justifyContent="center">
          <Grid item xs={12} md={6}>
            <FeatureCard>
              <FeatureImage src="/images/Abtamnhin.png" alt="T·∫ßm Nh√¨n" />
              <Typography variant="h5" sx={{ mb: 2, fontWeight: 600 }}>
                T·∫ßm Nh√¨n
              </Typography>
              <Typography sx={{ fontSize: '1.1rem', lineHeight: 1.6 }}>
                T·∫ßm nh√¨n c·ªßa ch√∫ng t√¥i l√† tr·ªü th√†nh ng∆∞·ªùi b·∫°n ƒë·ªìng h√†nh ƒë√°ng tin c·∫≠y c·ªßa m·ªçi t√≠n ƒë·ªì l√†m ƒë·∫πp t·∫°i Vi·ªát Nam. ƒê·ªìng th·ªùi, ch√∫ng t√¥i mong mu·ªën x√¢y d·ª±ng m·ªôt c·ªông ƒë·ªìng l√†m ƒë·∫πp th√¢n thi·ªán, n∆°i m·ªçi ng∆∞·ªùi c√≥ th·ªÉ chia s·∫ª kinh nghi·ªám, th·∫£o lu·∫≠n v√† h·ªçc h·ªèi l·∫´n nhau.
              </Typography>
            </FeatureCard>
          </Grid>
          <Grid item xs={12} md={6}>
            <FeatureCard>
              <FeatureImage src="/images/Absumenh.png" alt="S·ª© M·ªánh" />
              <Typography variant="h5" sx={{ mb: 2, fontWeight: 600 }}>
                S·ª© M·ªánh
              </Typography>
              <Typography sx={{ fontSize: '1.1rem', lineHeight: 1.6 }}>
                S·ª© m·ªánh c·ªßa ch√∫ng t√¥i kh√¥ng ch·ªâ d·ª´ng l·∫°i ·ªü vi·ªác "th·ª≠" s·∫£n ph·∫©m m·ªπ ph·∫©m, m√† c√≤n gi√∫p b·∫°n t√¨m th·∫•y s·ª± t·ª± tin, c√° t√≠nh ri√™ng v√† truy·ªÅn c·∫£m h·ª©ng ƒë·∫øn nh·ªØng ng∆∞·ªùi xung quanh.
              </Typography>
            </FeatureCard>
          </Grid>
        </Grid>
      </Container>

      {/* Contact & Consultation Section */}
      <Box
        sx={{
          background: 'url(/images/bghomepage1.png) center center / cover no-repeat',
          py: 8,
          minHeight: 500,
          display: 'flex',
          alignItems: 'center',
        }}
      >
        <Container maxWidth="lg">
          <Grid container spacing={4}>
            {/* Contact Info */}
            <Grid item xs={12} md={6}>
              <Typography sx={{ mb: 2 }}>
                B·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi ch√∫ng t√¥i b·∫±ng b·∫•t c·ª©<br />
                k√™nh n√†o m√† b·∫°n c√≥ th·ªÉ trao ƒë·ªïi
              </Typography>
              <Box sx={{ mb: 1 }}>
                <span role="img" aria-label="address">üìç</span> ƒê·ªãa ch·ªâ c·ªßa ch√∫ng t√¥i
              </Box>
              <Box sx={{ mb: 1 }}>
                <span role="img" aria-label="email">‚úâÔ∏è</span> flashion@fpt.vn
              </Box>
              <Box sx={{ mb: 2 }}>
                <span role="img" aria-label="phone">üìû</span> 0123456789
              </Box>
              <Box sx={{ mb: 2 }}>
                <Box sx={{
                  display: 'flex', alignItems: 'center', bgcolor: '#fff', borderRadius: 3, p: 1, mb: 1, width: 300
                }}>
                  <Typography fontWeight={600} sx={{ flex: 1 }}>Nh·∫Øn tin qua<br />Zalo Official</Typography>
                  <Box component="img" src="/images/zalo.png" alt="Zalo" sx={{ width: 32, height: 32, ml: 2 }} />
                </Box>
                <Box sx={{
                  display: 'flex', alignItems: 'center', bgcolor: '#fff', borderRadius: 3, p: 1, width: 300
                }}>
                  <Typography fontWeight={600} sx={{ flex: 1 }}>G·ªçi ngay Hotline<br />0123456789</Typography>
                  <Box component="img" src="/images/hotline.png" alt="Hotline" sx={{ width: 32, height: 32, ml: 2 }} />
                </Box>
              </Box>
            </Grid>
            {/* Consultation Form */}
            <Grid item xs={12} md={6}>
              <Box sx={{
                bgcolor: '#fff', borderRadius: 3, p: 4, boxShadow: 1, maxWidth: 400, mx: 'auto'
              }}>
                <Typography variant="h6" fontWeight={700} align="center" sx={{ mb: 1 }}>
                  Y√™u c·∫ßu t∆∞ v·∫•n ngay
                </Typography>
                <Typography align="center" sx={{ mb: 2, fontSize: 14 }}>
                  Ch√∫ng t√¥i g·ªçi l·∫°i ngay sau 1 - 3 ph√∫t
                </Typography>
                <Box component="form" onSubmit={handleSubmit}>
                  <TextField
                    fullWidth
                    label="H·ªç v√† t√™n c·ªßa b·∫°n"
                    name="name"
                    value={formData.name}
                    onChange={handleChange}
                    size="small"
                    sx={{ mb: 2 }}
                    required
                  />
                  <TextField
                    fullWidth
                    label="Email"
                    name="email"
                    type="email"
                    value={formData.email}
                    onChange={handleChange}
                    size="small"
                    sx={{ mb: 2 }}
                    required
                  />
                  <TextField
                    fullWidth
                    label="S·ªë ƒëi·ªán tho·∫°i"
                    name="phone"
                    value={formData.phone}
                    onChange={handleChange}
                    size="small"
                    sx={{ mb: 2 }}
                    required
                  />
                  <TextField
                    fullWidth
                    label="Vui l√≤ng ch·ªçn d·ªãch v·ª• m√† quan t√¢m"
                    name="service"
                    value={formData.service}
                    onChange={handleChange}
                    size="small"
                    sx={{ mb: 2 }}
                    required
                  />
                  <TextField
                    fullWidth
                    label="Y√™u c·∫ßu c·ª• th·ªÉ (n·∫øu c√≥)"
                    name="message"
                    value={formData.message}
                    onChange={handleChange}
                    size="small"
                    sx={{ mb: 2 }}
                    multiline
                    rows={3}
                  />
                  <Button
                    fullWidth
                    variant="contained"
                    type="submit"
                    sx={{ bgcolor: '#fbeee6', color: '#000', fontWeight: 700 }}
                  >
                    G·ª≠i ngay cho ch√∫ng t√¥i
                  </Button>
                </Box>
              </Box>
            </Grid>
          </Grid>
        </Container>
      </Box>

      <Snackbar
        open={snackbar.open}
        autoHideDuration={6000}
        onClose={handleCloseSnackbar}
      >
        <Alert onClose={handleCloseSnackbar} severity={snackbar.severity} sx={{ width: '100%' }}>
          {snackbar.message}
        </Alert>
      </Snackbar>
    </motion.div>
  );
};

export default AboutPage; 